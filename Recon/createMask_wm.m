function [BW,maskedRGBImage] = createMask_wm(RGB)
%createMask  Threshold RGB image using auto-generated code from colorThresholder app.
%  [BW,MASKEDRGBIMAGE] = createMask(RGB) thresholds image RGB using
%  auto-generated code from the colorThresholder app. The colorspace and
%  range for each channel of the colorspace were set within the app. The
%  segmentation mask is returned in BW, and a composite of the mask and
%  original RGB images is returned in maskedRGBImage.

% Auto-generated by colorThresholder app on 18-Aug-2021
%------------------------------------------------------


% Convert RGB image to chosen color space
I = rgb2lab(RGB);

% Define thresholds for channel 1 based on histogram settings
channel1Min = 0.000;
channel1Max = 90;

% Define thresholds for channel 2 based on histogram settings


% find the global maxima, find maxima before it, find minima inbetween
figure(22)
hist = histogram(I(:,:,2));

sm_values = smooth(hist.Values,20,'lowess');
histo = [hist.BinEdges',[sm_values;1]];
close(figure(22))

% find maxima
n = 3;
TF = find(islocalmax(histo(:,2),'MaxNumExtrema',n,'MinSeparation', 25));
Tf = histo(TF,:);

[~,max_idx] = max(Tf(:,2));
limit1 = Tf(max_idx,1);

min_idx = max_idx-1;

if min_idx<1
    n = n+1;
    TF = find(islocalmax(histo(:,2),'MaxNumExtrema',n,'MinSeparation', 25));
    Tf = histo(TF,:);

    [~,max_idx] = max(Tf(:,2));
    limit1 = Tf(max_idx,1);

    min_idx = max_idx-1;
end
limit2 = Tf(min_idx,1);

% find global minima in between firt 2 maxima
st1 = find(histo(:,1)==limit2);
st2 = find(histo(:,1)==limit1);
TF2 = find(islocalmin(histo(st1:st2,2),'MaxNumExtrema',1));
Tf2 = histo(TF2+st1,:);

% plot(histo(:,1),histo(:,2),'DisplayName','histo')
% hold on;
% scatter(Tf(:,1),Tf(:,2),'b');
% hold on;
% scatter(Tf2(:,1),Tf2(:,2),'r');

channel2Min = -30;
channel2Max = Tf2(1,1);


% Define thresholds for channel 3 based on histogram settings

% find global maxima
figure(22)
hist = histogram(I(:,:,3));
sm_values = smooth(hist.Values,10,'lowess');
histo = [hist.BinEdges',[sm_values;1]];
close(figure(22))

% find maxima
TF = find(islocalmax(histo(:,2),'MaxNumExtrema', 2, 'MinSeparation', 20));
Tf = histo(TF,:);

% find global minima in between firt 2 maxima
st1 = find(histo(:,1)==Tf(1,1));
st2 = find(histo(:,1)==Tf(2,1));
TF2 = find(islocalmin(histo(st1:st2,2),'MaxNumExtrema',1));
Tf2 = histo(TF2+st1,:);
% plot(histo(:,1),histo(:,2),'DisplayName','histo')
% hold on;
% scatter(Tf(:,1),Tf(:,2),'b');
% hold on;
% scatter(Tf2(:,1),Tf2(:,2),'r');

channel3Min = Tf2(1,1);
channel3Max = 33.159;

% Create mask based on chosen histogram thresholds
sliderBW = (I(:,:,1) >= channel1Min ) & (I(:,:,1) <= channel1Max) & ...
    (I(:,:,2) >= channel2Min ) & (I(:,:,2) <= channel2Max) & ...
    (I(:,:,3) >= channel3Min ) & (I(:,:,3) <= channel3Max);
BW = sliderBW;

% post processing
BW = imclose(BW,strel('disk',3)); % image closing
BW = bwareaopen(BW,200); % kick-out any blob smaller than 200 pixels
BW = bwareafilt(BW,1); % choose one biggest baddest blob
% Initialize output masked image based on input image.
maskedRGBImage = RGB;

% Set background pixels where BW is false to zero.
maskedRGBImage(repmat(~BW,[1 1 3])) = 0;

end
